From 6813110604d3e7e9638a9fd848c81ad1a9fc87ad Mon Sep 17 00:00:00 2001
From: Marvin Friedrich <contact@marvinf.com>
Date: Thu, 6 Feb 2025 16:25:15 +0100
Subject: [PATCH] Add Menix support

---
 CMakeLists.txt                      | 68 +++++++++++++++++++++++++++++
 src/detection/os/os_menix.c         |  7 +++
 src/logo/ascii/menix.txt            | 21 +++++++++
 src/options/general.h               |  2 +-
 src/util/FFstrbuf.h                 |  1 +
 src/util/platform/FFPlatform_unix.c |  2 +-
 6 files changed, 99 insertions(+), 2 deletions(-)
 create mode 100644 src/detection/os/os_menix.c
 create mode 100644 src/logo/ascii/menix.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 71c0e886..71eecd61 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -30,6 +30,8 @@ elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "DragonFly")
     set(DragonFly TRUE CACHE BOOL "..." FORCE)
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "SunOS")
     set(SunOS TRUE CACHE BOOL "..." FORCE)
+elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Menix")
+    set(Menix TRUE CACHE BOOL "..." FORCE)
 elseif(NOT APPLE AND NOT WIN32)
     message(FATAL_ERROR "Unsupported platform: ${CMAKE_SYSTEM_NAME}")
 endif()
@@ -1079,6 +1081,70 @@ elseif(SunOS)
         src/util/platform/FFPlatform_unix.c
         src/util/binary_linux.c
     )
+elseif(Menix)
+	list(APPEND LIBFASTFETCH_SRC
+		src/common/dbus.c
+		src/common/io/io_unix.c
+		src/common/netif/netif_linux.c
+		src/common/networking_linux.c
+		src/common/processing_linux.c
+		src/detection/battery/battery_nosupport.c
+		src/detection/bios/bios_nosupport.c
+		src/detection/bluetooth/bluetooth_nosupport.c
+		src/detection/bluetoothradio/bluetoothradio_nosupport.c
+		src/detection/board/board_nosupport.c
+		src/detection/bootmgr/bootmgr_nosupport.c
+		src/detection/brightness/brightness_nosupport.c
+		src/detection/btrfs/btrfs_nosupport.c
+		src/detection/chassis/chassis_nosupport.c
+		src/detection/cpu/cpu_nosupport.c
+		src/detection/cpucache/cpucache_nosupport.c
+		src/detection/cpuusage/cpuusage_nosupport.c
+		src/detection/cursor/cursor_nosupport.c
+		src/detection/disk/disk_nosupport.c
+		src/detection/dns/dns_linux.c
+		src/detection/physicaldisk/physicaldisk_nosupport.c
+		src/detection/physicalmemory/physicalmemory_nosupport.c
+		src/detection/diskio/diskio_nosupport.c
+		src/detection/font/font_nosupport.c
+		src/detection/host/host_nosupport.c
+		src/detection/icons/icons_linux.c
+		src/detection/initsystem/initsystem_linux.c
+		src/detection/keyboard/keyboard_linux.c
+		src/detection/libc/libc_linux.c
+		src/detection/lm/lm_linux.c
+		src/detection/loadavg/loadavg_nosupport.c
+		src/detection/locale/locale_linux.c
+		src/detection/gamepad/gamepad_linux.c
+		src/detection/media/media_linux.c
+		src/detection/memory/memory_linux.c
+		src/detection/mouse/mouse_linux.c
+		src/detection/netio/netio_linux.c
+		src/detection/opengl/opengl_linux.c
+		src/detection/os/os_menix.c
+		src/detection/packages/packages_linux.c
+		src/detection/poweradapter/poweradapter_linux.c
+		src/detection/processes/processes_linux.c
+		src/detection/gtk_qt/qt.c
+		src/detection/sound/sound_linux.c
+		src/detection/swap/swap_linux.c
+		src/detection/terminalfont/terminalfont_linux.c
+		src/detection/terminalshell/terminalshell_linux.c
+		src/detection/terminalsize/terminalsize_linux.c
+		src/detection/theme/theme_linux.c
+		src/detection/tpm/tpm_linux.c
+		src/detection/uptime/uptime_linux.c
+		src/detection/users/users_nosupport.c
+		src/detection/wallpaper/wallpaper_linux.c
+		src/detection/wifi/wifi_nosupport.c
+		src/detection/wm/wm_nosupport.c
+		src/detection/de/de_nosupport.c
+		src/detection/wmtheme/wmtheme_nosupport.c
+		src/detection/camera/camera_linux.c
+		src/detection/zpool/zpool_linux.c
+		src/util/platform/FFPlatform_unix.c
+		src/util/binary_linux.c
+	)
 endif()
 
 if(ENABLE_DIRECTX_HEADERS)
@@ -1189,6 +1255,8 @@ elseif(NetBSD)
     target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE)
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-char-subscripts")
     set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/usr/X11R7/lib -Wl,-rpath,/usr/pkg/lib") # ditto
+elseif(Menix)
+    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE _XOPEN_SOURCE _ATFILE_SOURCE)
 endif()
 
 if(FreeBSD OR OpenBSD OR NetBSD)
diff --git a/src/detection/os/os_menix.c b/src/detection/os/os_menix.c
new file mode 100644
index 00000000..7a8d6769
--- /dev/null
+++ b/src/detection/os/os_menix.c
@@ -0,0 +1,7 @@
+#include "os.h"
+
+void ffDetectOSImpl(FFOSResult* os)
+{
+    ffStrbufSetStatic(&os->name, "menix");
+    ffStrbufSet(&os->version, &instance.state.platform.sysinfo.release);
+}
diff --git a/src/logo/ascii/menix.txt b/src/logo/ascii/menix.txt
new file mode 100644
index 00000000..1a271f4d
--- /dev/null
+++ b/src/logo/ascii/menix.txt
@@ -0,0 +1,21 @@
+**************************************
+**.................****             **
+**.................****             **
+**................********          **
+**................*********         **
+**...............*********          **
+**..............*****            *****
+**............******    **       *****
+**..........*******  ******   ********
+**.......***********  ****************
+*************** *****  ***************
+************      *  *********......**
+**********    **** ********.........**
+**    *****  ************...........**
+**    ****     ********.............**
+**              ******..............**
+**             ******...............**
+**             *****................**
+**         *********................**
+**         *********................**
+**************************************
diff --git a/src/options/general.h b/src/options/general.h
index 8cb0d488..3f9c0dd6 100644
--- a/src/options/general.h
+++ b/src/options/general.h
@@ -16,7 +16,7 @@ typedef struct FFOptionsGeneral
     bool detectVersion;
 
     // Module options that cannot be put in module option structure
-    #if defined(__linux__) || defined(__FreeBSD__) || defined(__sun) || defined(__OpenBSD__) || defined(__NetBSD__)
+    #if defined(__linux__) || defined(__FreeBSD__) || defined(__sun) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__menix__)
     FFstrbuf playerName;
     bool escapeBedrock;
     FFDsForceDrmType dsForceDrm;
diff --git a/src/util/FFstrbuf.h b/src/util/FFstrbuf.h
index 1c754b10..35120387 100644
--- a/src/util/FFstrbuf.h
+++ b/src/util/FFstrbuf.h
@@ -7,6 +7,7 @@
 #include <stdbool.h>
 #include <stdio.h>
 #include <string.h>
+#include <strings.h>
 #include <stdlib.h>
 #include <assert.h>
 
diff --git a/src/util/platform/FFPlatform_unix.c b/src/util/platform/FFPlatform_unix.c
index b0d0ac1b..a1e8b7b6 100644
--- a/src/util/platform/FFPlatform_unix.c
+++ b/src/util/platform/FFPlatform_unix.c
@@ -19,7 +19,7 @@
 static void getExePath(FFPlatform* platform)
 {
     char exePath[PATH_MAX + 1];
-    #ifdef __linux__
+    #if defined(__linux__) || defined(__menix__)
         ssize_t exePathLen = readlink("/proc/self/exe", exePath, sizeof(exePath) - 1);
         exePath[exePathLen] = '\0';
     #elif defined(__APPLE__)
-- 
2.48.1

